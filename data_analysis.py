# -*- coding: utf-8 -*-
"""data-analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14Ipe4hJBLdHlmiQPAyZtUP0uytDqiY8r
"""

import pandas as pd
import os
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

# files = [file for file in os.listdir("./data-analysis/Sales_Data/")]

# tüm_aylar_veri = pd.DataFrame()

# for file in files:
#     df = pd.read_csv("./data-analysis/Sales_Data/" + file)
#     tüm_aylar_veri = pd.concat([tüm_aylar_veri, df])
    
# tüm_aylar_veri.to_csv("tüm_veriler.csv", index=False)

df = pd.read_csv("/content/drive/My Drive/Colab Notebooks/tüm_veriler.csv")

df = df.dropna(how = "all")

df = df[df["Order Date"].str[0:2] != "Or"]

df["Month"] = df["Order Date"].str[0:2]
df["Month"] = df["Month"].astype("int32")

df["Quantity Ordered"] = pd.to_numeric(df["Quantity Ordered"])
df["Price Each"] = pd.to_numeric(df["Price Each"])

df.insert(4, "Sales", df["Quantity Ordered"] * df["Price Each"])

aylık_satışlar = df.groupby("Month").sum()

aylar = range(1, 13)

plt.bar(aylar, aylık_satışlar["Sales"])
plt.xticks(aylar)
plt.xlabel("Ay")
plt.ylabel("Satışlar")
plt.show()

df.head()

df["City"] = df["Purchase Address"].apply(lambda x: x.split(",")[1] + " " + x.split(",")[2].split(" ")[1])
df.head()

df.to_csv("rev_data.csv", index=False)

şehir_satış = df.groupby("City", sort=False).sum()
şehir_satış

# plt.figure(figsize=(16,8))
plt.bar(şehir_satış.index, şehir_satış["Sales"])
# plt.plot(şehir_satış["Sales"])
plt.xticks(şehir_satış.index, rotation="vertical", size=8)

plt.xlabel("Şehirler")
plt.ylabel("Satışlar")
plt.show()

df["Order Date"] = pd.to_datetime(df["Order Date"])

df.head()

df["Hour"] = df["Order Date"].dt.hour
df.head()

saat_satış = df.groupby(["Hour"]).count()
saat_satış.head()

plt.plot(saat_satış)
plt.xticks(saat_satış.index)
plt.grid()
plt.xlabel("Saat")
plt.ylabel("Order Quantity")
plt.show()

order_df = df[df["Order ID"].duplicated(keep=False)]

order_df["Grouped"] = order_df.groupby("Order ID")["Product"].transform(lambda x: ", ".join(x))

order_df = order_df[["Order ID", "Grouped"]].drop_duplicates()

order_df.head()

from itertools import combinations
from collections import Counter

count = Counter()

for row in order_df["Grouped"]:
  row_list = row.split(",")
  count.update(Counter(combinations(row_list, 2)))

count.most_common(10)

## farklı bi yöntemle aynı(?) sonuç:
# order_df = order_df["Grouped"].str.split(",", expand=True)
# order_df.columns = ["Product-1", "Product-2", "Product-3", "Product-4", "Product-5"]
# order_df.groupby(["Product-1", "Product-2"]).size().sort_values(ascending=False)

df.head()

product_oq = df.groupby("Product", sort=False).sum()
product_oq.head()

plt.bar(product_oq.index, product_oq["Quantity Ordered"])
plt.xticks(product_oq.index, rotation=90, size=10)
plt.show()

df.head()

df_time_filtered = df.loc[df['Order Date'].between('2019-05-01','2019-08-01')]

# df.loc[df["Order Date"] > "2019-05-01"].sort_values("Order Date")

df_time_filtered.head()

